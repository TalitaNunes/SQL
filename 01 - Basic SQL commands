# Basic SQL commands 
# comandos básicos de SQL


# SQL (“Structured Query Language”) is a standard language for working with relational databases
# SQL (“Structured Query Language”) é uma linguagem padrão para trabalhar com bancos de dados relacionais

# The following are the main SQL commands for database queries
# A seguir, os principais comandos SQL para consultas em bancos de dados

#--------------------------------------------------------------------------------------------------------------------------------------------------------------

# Basics commands

# 1- SELECT 
# 2- DISTINCT
# 3- WHERE
# 4- AND, OR, NOT
# 5- ORDER BY

#--------------------------------------------------------------------------------------------------------------------------------------------------------------
# 1 - SELECT
# The SQL SELECT Statement
# A instrução SQL SELECT

# The SELECT statement is used to select data from a database, the returned data is stored in a result table, called a result set.
# A instrução SELECT é usada para selecionar dados de um banco de dados, os dados retornados são armazenados em uma tabela de resultados, chamada de conjunto de resultados.

# columns are the fields of a table in a database, and table_name indicates which table
# colunas são os campos de uma tabela em um banco de dados, e table_name indica o qual é a tabela 

# Example 1
SELECT column1, column2, column3, ...
FROM table_name;

# Example 2
SELECT name, age, adress, ...
FROM table_students;


# It´s possible to apply a * instead of declaring the columns, and in this way, all the columns of the table will be returned
# é possível aplicar  um * ao invés de declarar as colunas, e desta forma, todas as colunas da tabela serão retornadas


# Example 3
SELECT *
FROM table_students;


#--------------------------------------------------------------------------------------------------------------------------------------------------------------

# 2 - DISTINCT
# The SQL DISTINCT Statement
# A instrução SQL DISTINCT


# The SELECT DISTINCT statement is used to return only distinct (different) values
# Inside a table, a column often contains many duplicate values; and sometimes you only want to list the different (distinct) values

# A instrução SELECT DISTINCT é usada para retornar apenas valores distintos (diferentes)
# Dentro de uma tabela, uma coluna geralmente contém muitos valores duplicados, e às vezes você só quer listar os valores diferentes (distintos)


# Example 1 (in this example the query looks for the distinct names of the students table)
# Example 1 (neste exemplo a query consulta os nomes distintos da tabela estudantes)

SELECT DISTINCT name
FROM table_students;



#--------------------------------------------------------------------------------------------------------------------------------------------------------------


# 3 - WHERE
# The SQL WHERE Statement
# A instrução SQL WHERE


# The SELECT WHERE statement allows the insertion of filters in the query (this command always comes after the FROM)
# A instrução SELECT WHERE permite a inserção de filtros na consulta (este comando sempre vem depois do FROM)


# Example 1 (return the name of employees whose salary is less than 5000)
# Example 1 (retorna o nome dos funcionários, cujo salário é menor que 5000)

SELECT name, salary
FROM table_payments
WHERE salary < 5000


# Example 2 (return name of people over 30 years old)
# Example 2 (retorne nome das pessoas acima de 30 anos)

SELECT name, age, nationality
FROM table_customers
WHERE age > 30


#--------------------------------------------------------------------------------------------------------------------------------------------------------------

# 4 - AND, OR, NOT

# The WHERE clause can be combined with AND, OR, and NOT operators.

# The AND and OR operators are used to filter records based on more than one condition:
#   The AND operator displays a record if all the conditions separated by AND are TRUE.
#   The OR operator displays a record if any of the conditions separated by OR is TRUE.
#   The NOT operator displays a record if the condition(s) is NOT TRUE.


# A cláusula WHERE pode ser combinada com os operadores AND, OR e NOT.

# Os operadores AND e OR são usados para filtrar registros com base em mais de uma condição:
# O operador AND exibe um registro se todas as condições separadas por AND forem TRUE.
# O operador OR exibe um registro se alguma das condições separadas por OR for TRUE.
# O operador NOT exibe um registro se a(s) condição(ões) for NOT TRUE.



# Example 1 (AND)

# imagine that you are working for a basketball team, and you need to search in a database of schools,
# in the table_students, search for, Brazilian boys, over 15 years old with height over 1.80 m

# imagine que você está trabalhando para um time de basquete e precisa pesquisar em um banco de dados de escolas,
# na tabela_alunos, procure, meninos brasileiros, maiores de 15 anos e estatura acima de 1,80 m

SELECT name, last_name, age, adress, height, nationality, gender, ...
FROM table_students
WHERE condition1 (nationality) = 'Brazil' AND condition2 (age) > 15 AND condition3 (height) > 1.80 AND condition4 (gender) = 'Male'



# Example 2 (OR)

# imagine that you need to find all car models, in a database, whose colors are red, black and blue
# imagine que você precisa localizar todos os modelos de carro, em um banco de dados, cuja as cores sejam vermelho, preto e azul


SELECT car, year_manufacture, color, type_fuel ...
FROM table_cars
WHERE condition1 (color) = 'Red' OR condition2 (color) = 'Black' OR condition3 (color) = 'Blue' 



# Example 3 (NOT)

# imagine that you need to search, in a database, all orders placed, except those that have not yet been paid
# imagine que você precisa pesquisar, em um banco de dados, todos os pedidos realizados, exceto os que ainda não foram pagos


SELECT orders, data_order, order_type, item_description, status, ...
FROM table_orders
WHERE condition1 (status) NOT IN  ('Pending')  



#--------------------------------------------------------------------------------------------------------------------------------------------------------------

# 5 - ORDER BY

# The ORDER BY clause is used to sort the result-set in ascending or descending order
# The sorts are in ascending order by default. To sort the records in descending order, use the DESC keyword


# A cláusula ORDER BY é usada para classificar o conjunto de resultados em ordem crescente ou decrescente
# As classificações estão em ordem crescente por padrão. Para classificar os registros em ordem decrescente, use a palavra-chave DESC


# in the following example, the query will be sorted by the name column, in ascending order, that is, alphabetically, in this case
# no exemplo a seguir, a consulta será classificada pela coluna de nome, em ordem crescente, ou seja, em ordem alfabética, neste caso

# Example 1
SELECT name, last_name, age, ...
FROM table_name
ORDER BY name


# in this other example, the query will be sorted by the country column in descending order
# neste outro exemplo, a consulta será ordenada pela coluna país em ordem decrescente

# Example 2
SELECT country, city, state, ...
FROM table_country
ORDER BY country DESC


